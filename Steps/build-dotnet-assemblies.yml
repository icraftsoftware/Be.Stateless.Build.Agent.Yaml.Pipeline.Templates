#region Copyright & License

# Copyright © 2012 - 2021 François Chabot
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#endregion

parameters:
  - name: path
    type: string
  - name: major
    type: string
  - name: minor
    type: string
  - name: build
    type: string
  - name: revision
    type: string
  - name: configuration
    type: string
    values:
      - Debug
      - Release
  - name: toolSet
    type: string
    default: dotnet
    values:
      - dotnet
      - msbuild
  - name: skipBuildArtifacts
    type: boolean
  - name: skipTests
    type: boolean
  - name: condition
    type: string
    default: succeeded()

steps:
  - task: DownloadSecureFile@1
    name: signingKey
    displayName: Download Private Signing Key
    inputs:
      secureFile: be.stateless.snk

  - task: DotNetCoreCLI@2
    displayName: dotnet restore
    condition: ${{ parameters.condition }}
    inputs:
      command: restore
      workingDirectory: ${{ parameters.path }}
      feedsToUse: select
      vstsFeed: be.stateless/BizTalk.Server.Library
      includeNuGetOrg: true
      verbosityRestore: Minimal

  - ${{ if eq(parameters.toolSet, 'dotnet') }}:
      - task: DotNetCoreCLI@2
        displayName: dotnet build (${{ parameters.configuration }})
        condition: ${{ parameters.condition }}
        inputs:
          command: build
          workingDirectory: ${{ parameters.path }}
          arguments: --configuration ${{ parameters.configuration }} --no-restore -p:Major=${{ parameters.major }};Minor=${{ parameters.minor }};Build=${{ parameters.build }};Revision=${{ parameters.revision }};InformationalVersion=$(Build.BuildNumber);AssemblyOriginatorKeyFile=$(signingKey.secureFilePath);GeneratePackageOnBuild=false;NoWarn=1591

      - ${{ if ne(parameters.skipTests, true) }}:
          - task: DotNetCoreCLI@2
            displayName: dotnet test (${{ parameters.configuration }})
            condition: ${{ parameters.condition }}
            inputs:
              command: test
              workingDirectory: ${{ parameters.path }}
              arguments: --configuration ${{ parameters.configuration }} --no-build
              publishTestResults: true

  - ${{ if eq(parameters.toolSet, 'msbuild') }}:
      - task: MSBuild@1
        displayName: msbuild build (${{ parameters.configuration }})
        condition: ${{ parameters.condition }}
        inputs:
          solution: ${{ parameters.path }}/*.sln
          msbuildVersion: latest
          msbuildArchitecture: x64
          configuration: ${{ parameters.configuration }}
          msbuildArguments: -p:Major=${{ parameters.major }};Minor=${{ parameters.minor }};Build=${{ parameters.build }};Revision=${{ parameters.revision }};InformationalVersion=$(Build.BuildNumber);AssemblyOriginatorKeyFile=$(signingKey.secureFilePath);GeneratePackageOnBuild=false;NoWarn=1591
          clean: false
          restoreNugetPackages: false

      - ${{ if ne(parameters.skipTests, true) }}:
          - task: VSTest@2
            displayName: msbuild test (${{ parameters.configuration }})
            condition: ${{ parameters.condition }}
            inputs:
              searchFolder: ${{ parameters.path }}/src
              testSelector: testAssemblies
              testAssemblyVer2: |
                **/*.Tests.dll
                !**/obj/**

  - ${{ if ne(parameters.skipBuildArtifacts, true) }}:
      - task: DotNetCoreCLI@2
        displayName: dotnet pack (${{ parameters.configuration }})
        condition: ${{ parameters.condition }}
        inputs:
          command: pack
          workingDirectory: ${{ parameters.path }}
          configuration: ${{ parameters.configuration }}
          buildProperties: PackageVersion=$(Build.BuildNumber)
          includeSymbols: true
          noBuild: true
          packDirectory: $(Build.ArtifactStagingDirectory)/NugetPackages
          verbosityPack: Normal

      - template: /Steps/publish-build-artifact.yml
        parameters:
          name: NugetPackages
          condition: ${{ parameters.condition }}

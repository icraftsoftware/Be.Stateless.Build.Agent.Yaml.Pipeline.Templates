#region Copyright & License

# Copyright © 2012 - 2021 François Chabot & Emmanuel Benitez
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#endregion

parameters:
  - name: ProjectOrSolutionPath
    type: string
  - name: Major
    type: number
  - name: Minor
    type: number
  - name: Configuration
    type: string
    values:
      - Debug
      - Release
  - name: BuildEngine
    type: string
    values:
      - dotnet
      - msbuild
    default: dotnet
  - name: SkipTest
    type: boolean
  - name: TestEngine
    type: string
    values:
      - dotnet
      - vstest
    default: dotnet
  - name: SkipBuildArtifactPublication
    type: boolean
  - name: SkipPowerShellModules
    type: boolean

stages:
  - stage: build
    displayName: "Build stage"
    variables:
      - group: "code-signing-certificates"
    jobs:
      - job: prepare
        displayName: "Prepare"
        steps:
          - checkout: none

          - template: /Steps/generate-build-number.yml
            parameters:
              Major: ${{ parameters.Major }}
              Minor: ${{ parameters.Minor }}

      - job: build
        displayName: "Compile, test, and pack"
        pool:
          vmImage: "windows-latest"
          workspace:
            clean: all
        dependsOn: prepare
        condition: succeeded()
        variables:
          VersionBuild: $[ dependencies.prepare.outputs['generateBuildNumber.VersionBuild'] ]
          VersionRevision: $[ dependencies.prepare.outputs['generateBuildNumber.VersionRevision'] ]
        steps:
          - checkout: self
            submodules: true

          - template: /Steps/download-private-signing-key.yml
            parameters:
              StepName: privateSigningKey

          - template: /Steps/dotnet-restore.yml
            parameters:
              ProjectOrSolutionPath: ${{ parameters.ProjectOrSolutionPath }}

          - ${{ if eq(parameters.BuildEngine, 'dotnet') }}:
              - template: /Steps/dotnet-build.yml
                parameters:
                  ProjectOrSolutionPath: ${{ parameters.ProjectOrSolutionPath }}
                  Configuration: ${{ parameters.Configuration }}
                  Major: ${{ parameters.Major }}
                  Minor: ${{ parameters.Minor }}
                  Build: $(VersionBuild)
                  Revision: $(VersionRevision)
                  PrivateSigningKeyPath: "$(privateSigningKey.secureFilePath)"

          - ${{ if eq(parameters.BuildEngine, 'msbuild') }}:
              - template: /Steps/msbuild-build.yml
                parameters:
                  ProjectOrSolutionPath: ${{ parameters.ProjectOrSolutionPath }}
                  Configuration: ${{ parameters.Configuration }}
                  Major: ${{ parameters.Major }}
                  Minor: ${{ parameters.Minor }}
                  Build: $(VersionBuild)
                  Revision: $(VersionRevision)
                  PrivateSigningKeyPath: "$(privateSigningKey.secureFilePath)"

          - ${{ if ne(parameters.SkipTest, true) }}:
              - ${{ if eq(parameters.TestEngine, 'dotnet') }}:
                  - template: /Steps/dotnet-test.yml
                    parameters:
                      ProjectOrSolutionPath: ${{ parameters.ProjectOrSolutionPath }}
                      Configuration: ${{ parameters.Configuration }}

                  - template: /Steps/generate-and-publish-code-coverage-report.yml

              - ${{ if eq(parameters.TestEngine, 'vstest') }}:
                  - template: /Steps/vstest.yml
                    parameters:
                      Configuration: ${{ parameters.Configuration }}

          - ${{ if ne(parameters.SkipBuildArtifactPublication, true) }}:
              - template: /Steps/dotnet-pack.yml
                parameters:
                  Configuration: ${{ parameters.Configuration }}
                  OutputPath: "$(build.artifactstagingdirectory)/packages"

              - template: /Steps/publish-build-artifact.yml
                parameters:
                  ArtifactName: "NugetPackages"
                  PathToPublish: "$(Build.ArtifactStagingDirectory)/packages"

              - ${{ if ne(parameters.SkipPowerShellModules, true) }}:
                  - template: /Steps/dotnet-publish.yml
                    parameters:
                      ProjectsFilePathPattern: "$(Build.SourcesDirectory)/**/*.Cmdlets.csproj"
                      Configuration: ${{ parameters.Configuration }}
                      OutputPath: "$(Agent.TempDirectory)/powershell-modules"
                      FlattenOutput: false

                  - template: /Steps/download-private-code-signing-certificate.yml
                    parameters:
                      StepName: codeSigningCertificate

                  - template: /Steps/build-powershell-modules.yml
                    parameters:
                      RootModulesFolderPath: "$(Agent.TempDirectory)/powershell-modules"
                      OutputPath: "$(Build.ArtifactStagingDirectory)/powershell-modules"
                      CodeSigningCertificatePath: $(codeSigningCertificate.secureFilePath)
                      CodeSigningCertificatePassword: $(be-stateless-certificate-password)

                  - template: /Steps/publish-build-artifact.yml
                    parameters:
                      ArtifactName: "PowerShellModules"
                      PathToPublish: "$(Build.ArtifactStagingDirectory)/powershell-modules"

      - job: analyzeCode
        displayName: "Analyze code"
        dependsOn: prepare
        condition: succeeded()
        pool:
          vmImage: "windows-latest"
          workspace:
            clean: all
        steps:
          - checkout: self
            submodules: true

          - template: /Steps/dotnet-restore.yml
            parameters:
              ProjectOrSolutionPath: ${{ parameters.ProjectOrSolutionPath }}

          - template: /Steps/analyze-code-with-resharper.yml
            parameters:
              ProjectOrSolutionPath: ${{ parameters.ProjectOrSolutionPath }}
              Configuration: ${{ parameters.Configuration }}

#region Copyright & License

# Copyright © 2012 - 2021 François Chabot & Emmanuel Benitez
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#endregion

parameters:
  - name: Configuration
    type: string
    values:
      - Debug
      - Release
  - name: Major
    type: number
  - name: Minor
    type: number
  - name: SkipTest
    type: boolean
  - name: SkipBuildArtifactPublication
    type: boolean

stages:
  - stage: build
    displayName: "Build stage"
    variables:
      - group: "code-signing-certificates"
    jobs:
      - job: build
        pool:
          vmImage: "windows-latest"
          workspace:
            clean: all
        displayName: "Build, test and sign PowerShell module"
        steps:
          - checkout: self
            submodules: true

          - template: /Steps/generate-build-number.yml
            parameters:
              Major: ${{ parameters.Major }}
              Minor: ${{ parameters.Minor }}

          - template: /Steps/find-powershell-module-name.yml
            parameters:
              SearchFolderPath: $(Build.SourcesDirectory)/src
              StepName: findPowerShellModule

          - template: /Steps/find-solution-file-path.yml
            parameters:
              SearchFolderPath: $(Build.SourcesDirectory)
              StepName: findSolutionFile

          - template: /Steps/dotnet-restore.yml
            parameters:
              ProjectOrSolutionPath: $(findSolutionFile.solutionFilePath)
              Condition: eq(variables['findSolutionFile.exists'], 'true')

          - template: /Steps/download-private-signing-key.yml
            parameters:
              StepName: privateSigningKey

          - template: /Steps/dotnet-build.yml
            parameters:
              ProjectOrSolutionPath: $(findSolutionFile.solutionFilePath)
              Configuration: ${{ parameters.Configuration }}
              Major: ${{ parameters.Major }}
              Minor: ${{ parameters.Minor }}
              Build: $(generateBuildNumber.VersionBuild)
              Revision: $(generateBuildNumber.VersionRevision)
              PrivateSigningKeyPath: "$(privateSigningKey.secureFilePath)"
              Condition: eq(variables['findSolutionFile.exists'], 'true')

          - ${{ if ne(parameters.SkipTest, true) }}:
              - template: /Steps/dotnet-test.yml
                parameters:
                  ProjectOrSolutionPath: $(findSolutionFile.solutionFilePath)
                  Configuration: ${{ parameters.Configuration }}
                  Condition: eq(variables['findSolutionFile.exists'], 'true')

          - template: /Steps/dotnet-publish.yml
            parameters:
              ProjectsFilePathPattern: $(findSolutionFile.solutionFilePath)
              Configuration: ${{ parameters.Configuration }}
              Condition: eq(variables['findSolutionFile.exists'], 'true')
              OutputPath: "$(Build.SourcesDirectory)/src/$(findPowerShellModule.moduleName)/bin/"
              FlattenOutput: true
              Arguments: '--no-build'


          - ${{ if ne(parameters.SkipTest, true) }}:
              - template: /Steps/restore-required-powershell-modules.yml
                parameters:
                  ModuleRootFolderPath: $(Build.SourcesDirectory)/src

              - template: /Steps/test-powershell-module.yml
                parameters:
                  ModuleFolderPath: $(findPowerShellModule.moduleFolderPath)
                  ResultFolderPath: "$(Build.SourcesDirectory)"

          - ${{ if ne(parameters.SkipBuildArtifactPublication, true) }}:
              - template: /Steps/download-private-code-signing-certificate.yml
                parameters:
                  StepName: codeSigningCertificate

              - template: /Steps/build-powershell-modules.yml
                parameters:
                  ModuleRootFolderPath: "$(Build.SourcesDirectory)/src"
                  OutputPath: "$(Build.ArtifactStagingDirectory)"
                  CodeSigningCertificatePath: $(codeSigningCertificate.secureFilePath)
                  CodeSigningCertificatePassword: $(be-stateless-certificate-password)

              - template: /Steps/publish-build-artifact.yml
                parameters:
                  ArtifactName: "PowerShellModule"
                  PathToPublish: "$(Build.ArtifactStagingDirectory)"
